---
version: '2'
services:

  agent:
    image: inspectit/inspectit-ocelot-agent:ocelot-meets-friends
    container_name: agent
    mem_limit: 128M
    volumes:
      - agent-vol:/agent
    networks:
      - apm

  ocelot-config-server:
    image: inspectit/inspectit-ocelot-configurationserver:ocelot-meets-friends
    container_name: ocelot-config-server
    mem_limit: 256M
    environment:
      - INSPECTIT_CONFIG_SERVER_WORKING_DIRECTORY=/configuration-server
      - INSPECTIT_CONFIG_SERVER_DEFAULT_USER_PASSWORD=demo
    volumes:
      - ./configuration-server:/configuration-server
    ports:
      - 8090:8090
    networks:
      - apm

  config-server:
    image: inspectit/spring-petclinic-config-server:ocelot-meets-friends
    container_name: config-server
    depends_on:
      - ocelot-config-server
      - agent
    environment:
      - INSPECTIT_SERVICE_NAME=config-server
      - INSPECTIT_CONFIG_HTTP_URL=http://ocelot-config-server:8090/api/v1/agent/configuration
      - INSPECTIT_EXPORTERS_METRICS_PROMETHEUS_PORT=8889
    mem_limit: 512M
    entrypoint: ["sh", "-c","
      java -XX:+UnlockExperimentalVMOptions -XX:+UseCGroupMemoryLimitForHeap -Djava.security.egd=file:/dev/./urandom
      -javaagent:/agent/inspectit-ocelot-agent.jar
      -jar /app.jar"]
    volumes:
      - agent-vol:/agent
    ports:
      - 8888:8888
      - 8889
    networks:
      - apm
    labels:
      co.elastic.metrics/module: prometheus
      co.elastic.metrics/period: 15s
      co.elastic.metrics/hosts: '$${data.container.name}:8889'

  discovery-server:
    image: inspectit/spring-petclinic-discovery-server:ocelot-meets-friends
    container_name: discovery-server
    environment:
      - INSPECTIT_SERVICE_NAME=discovery-server
      - INSPECTIT_CONFIG_HTTP_URL=http://ocelot-config-server:8090/api/v1/agent/configuration
    mem_limit: 512M
    depends_on:
      - ocelot-config-server
      - agent
      - config-server
    entrypoint: ["sh", "-c","
      ./dockerize -wait=tcp://config-server:8888 -timeout=120s -- &&
      java -XX:+UnlockExperimentalVMOptions -XX:+UseCGroupMemoryLimitForHeap -Djava.security.egd=file:/dev/./urandom
      -javaagent:/agent/inspectit-ocelot-agent.jar
      -jar /app.jar"]
    volumes:
      - agent-vol:/agent
    ports:
      - 8761:8761
      - 8888
    networks:
      - apm
    labels:
      co.elastic.metrics/module: prometheus
      co.elastic.metrics/period: 15s
      co.elastic.metrics/hosts: '$${data.container.name}:8888'

  customers-service:
    image: inspectit/spring-petclinic-customers-service:ocelot-meets-friends
    container_name: customers-service
    environment:
      - INSPECTIT_SERVICE_NAME=customers-service
      - INSPECTIT_CONFIG_HTTP_URL=http://ocelot-config-server:8090/api/v1/agent/configuration
    mem_limit: 512M
    depends_on:
      - ocelot-config-server
      - agent
      - config-server
      - discovery-server
      - metricbeat
    entrypoint: ["sh", "-c","
      ./dockerize -wait=tcp://discovery-server:8761 -timeout=120s -- &&
      java -XX:+UnlockExperimentalVMOptions -XX:+UseCGroupMemoryLimitForHeap -Djava.security.egd=file:/dev/./urandom
      -javaagent:/agent/inspectit-ocelot-agent.jar
      -jar /app.jar"]
    volumes:
      - agent-vol:/agent
    ports:
      - 8081:8081
      - 8888
    networks:
      - apm
    labels:
      co.elastic.metrics/module: prometheus
      co.elastic.metrics/period: 15s
      co.elastic.metrics/hosts: '$${data.container.name}:8888'

  visits-service:
    image: inspectit/spring-petclinic-visits-service:ocelot-meets-friends
    container_name: visits-service
    environment:
      - INSPECTIT_SERVICE_NAME=visits-service
      - INSPECTIT_CONFIG_HTTP_URL=http://ocelot-config-server:8090/api/v1/agent/configuration
    mem_limit: 512M
    depends_on:
      - ocelot-config-server
      - agent
      - config-server
      - discovery-server
    entrypoint: ["sh", "-c","
      ./dockerize -wait=tcp://discovery-server:8761 -timeout=120s -- &&
      java -XX:+UnlockExperimentalVMOptions -XX:+UseCGroupMemoryLimitForHeap -Djava.security.egd=file:/dev/./urandom
      -javaagent:/agent/inspectit-ocelot-agent.jar
      -jar /app.jar"]
    volumes:
      - agent-vol:/agent
    ports:
      - 8082:8082
      - 8888
    networks:
      - apm
    labels:
      co.elastic.metrics/module: prometheus
      co.elastic.metrics/period: 15s
      co.elastic.metrics/hosts: '$${data.container.name}:8888'

  vets-service:
    image: inspectit/spring-petclinic-vets-service:ocelot-meets-friends
    container_name: vets-service
    environment:
      - INSPECTIT_SERVICE_NAME=vets-service
      - INSPECTIT_CONFIG_HTTP_URL=http://ocelot-config-server:8090/api/v1/agent/configuration
    mem_limit: 512M
    depends_on:
      - ocelot-config-server
      - agent
      - config-server
      - discovery-server
    entrypoint: ["sh", "-c","
      ./dockerize -wait=tcp://discovery-server:8761 -timeout=120s -- &&
      java -XX:+UnlockExperimentalVMOptions -XX:+UseCGroupMemoryLimitForHeap -Djava.security.egd=file:/dev/./urandom
      -javaagent:/agent/inspectit-ocelot-agent.jar
      -jar /app.jar"]
    volumes:
      - agent-vol:/agent
    ports:
      - 8083:8083
      - 8888
    networks:
      - apm
    labels:
      co.elastic.metrics/module: prometheus
      co.elastic.metrics/period: 15s
      co.elastic.metrics/hosts: '$${data.container.name}:8888'

  api-gateway:
    image: inspectit/spring-petclinic-api-gateway:ocelot-meets-friends
    container_name: api-gateway
    environment:
      - INSPECTIT_SERVICE_NAME=api-gateway
      - INSPECTIT_CONFIG_HTTP_URL=http://ocelot-config-server:8090/api/v1/agent/configuration
    mem_limit: 512M
    depends_on:
      - ocelot-config-server
      - agent
      - config-server
      - discovery-server
    entrypoint: ["sh", "-c","
      ./dockerize -wait=tcp://discovery-server:8761 -timeout=120s -- &&
      java -XX:+UnlockExperimentalVMOptions -XX:+UseCGroupMemoryLimitForHeap -Djava.security.egd=file:/dev/./urandom
      -javaagent:/agent/inspectit-ocelot-agent.jar
      -jar /app.jar"]
    volumes:
      - agent-vol:/agent
    ports:
      - 8080:8080
      - 8888
    networks:
      - apm
    labels:
      co.elastic.metrics/module: prometheus
      co.elastic.metrics/period: 15s
      co.elastic.metrics/hosts: '$${data.container.name}:8888'

  load:
    image: inspectit/spring-petclinic-load:ocelot-meets-friends
    container_name: load-generator
    networks:
      - apm

  apm-server:
    image: elastic/apm-server:7.6.2
    command: apm-server -strict.perms=false -e
    container_name: apm-server
    ports:
        - 8200:8200
        - 8201:8200
        - 14268:14268
    environment:
        - apm-server.host=0.0.0.0
    volumes:
        - ./apm-server.yml:/usr/share/apm-server/apm-server.yml
    networks:
        - apm
    depends_on:
      - elasticsearch
      - kibana

  elasticsearch:
      image: elasticsearch:7.6.2
      container_name: elasticsearch
      environment:
          - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
          - discovery.type=single-node
          - http.host=0.0.0.0
          - transport.host=127.0.0.1
          - ELASTIC_PASSWORD=password
      networks:
          - apm
      ports:
          - "9200:9200"
  kibana:
      image: elastic/kibana:7.6.2
      container_name: kibana
      ports:
        - "5601:5601"
      networks:
          - apm
      environment:
          - ELASTICSEARCH_URL=http://elasticsearch:9200
          - ELASTICSEARCH_USERNAME=kibana
          - ELASTICSEARCH_PASSWORD=password
      depends_on:
        - elasticsearch

  metricbeat:
    image: elastic/metricbeat:7.6.2
    command: metricbeat -strict.perms=false -e
    container_name: metricbeat
    user: root
    volumes:
        - ./metricbeat.yml:/usr/share/metricbeat/metricbeat.yml:ro
        - /var/run/docker.sock:/var/run/docker.sock:ro
        - /var/lib/docker/containers:/var/lib/docker/containers:ro
    networks:
        - apm
    environment:
        - setup.kibana.host=kibana:5601
        - output.elasticsearch.hosts=["elasticsearch:9200"]
    depends_on:
      - elasticsearch
      - kibana

volumes:
  agent-vol:

networks:
  apm:
    driver: bridge
